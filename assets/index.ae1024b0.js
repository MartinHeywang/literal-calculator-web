var W=Object.defineProperty,X=Object.defineProperties;var Y=Object.getOwnPropertyDescriptors;var R=Object.getOwnPropertySymbols;var Z=Object.prototype.hasOwnProperty,x=Object.prototype.propertyIsEnumerable;var V=(e,t,r)=>t in e?W(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,q=(e,t)=>{for(var r in t||(t={}))Z.call(t,r)&&V(e,r,t[r]);if(R)for(var r of R(t))x.call(t,r)&&V(e,r,t[r]);return e},_=(e,t)=>X(e,Y(t));const ee=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const u of i.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&n(u)}).observe(document,{childList:!0,subtree:!0});function r(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerpolicy&&(i.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?i.credentials="include":o.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(o){if(o.ep)return;o.ep=!0;const i=r(o);fetch(o.href,i)}};ee();function te(){return{}}function E(e,t,r=1){e[t]||(e[t]=0),e[t]+=r}function re(e,t,r=1){E(e,t,r*-1)}function C(e){return Object.keys(F(e)).sort().reduce((t,r)=>{const n=e[r],o=n?n===1?r:`${r}^${n}`:"";return`${t}${o}`},"")}function ne(e){return Object.keys(e).length===0}function oe(...e){const t={};return e.forEach(r=>{Object.keys(r).forEach(n=>{E(t,n,r[n])})}),F(t)}function ie(e,t){const r=JSON.parse(JSON.stringify(e));return Object.keys(t).forEach(n=>{re(r,n,t[n])}),r}function F(e){const t=JSON.parse(JSON.stringify(e));return Object.keys(t).forEach(r=>{t[r]>0||delete t[r]}),t}function b(e,t){return{type:"fraction",data:{numerator:e,denominator:t}}}function ue(e){if(!e.includes("|"))throw new Error("Could not parse text as fraction : the input string does not contain a '|'. Valid example: '12 | 5'");const t=e.indexOf("|"),r=e.slice(0,t),n=e.slice(t+1);if(n.indexOf("|")!==-1)throw new Error("Could not parse text as fraction : the input string contains multiplie bars.");const o=l(r),i=l(n);if(!y(o)||!y(i))throw new Error("Could not parse text as fraction : could not parse numerator and/or denominator as number.");return b(o,i)}function ae(e){const t={numerator:s(e.data.numerator),denominator:s(e.data.denominator)};return`${t.numerator?"(":""}${c(e.data.numerator)}${t.numerator?")":""}|${t.denominator?"(":""}${c(e.data.denominator)}${t.denominator?")":""}`}function L(e){if(!e)return!1;const t=typeof e=="object"?h(e):e;return!(!t.includes("|")||t.indexOf("|")!==t.lastIndexOf("|")||!y(t.slice(0,t.indexOf("|")))||!y(t.slice(t.indexOf("|")+1)))}function T(e){let{numerator:t,denominator:r}=e.data;if(c(t)===c(r))return l("1");if(s(t)||s(r)||(L(t)&&(t=T(t)),L(r)&&(r=T(r)),!y(t)||!y(r)))return b(t,r);const n=ie(t.data.multiplier,r.data.multiplier),o=F(n),i=JSON.parse(JSON.stringify(n));console.log("deno multi"),console.log(n),Object.keys(i).forEach(w=>{const A=i[w];A>=0&&delete i[w],A<0&&(i[w]*=-1)}),console.log(i);const u=(w,A)=>w%A==0;if(u(t.data.value,r.data.value)&&Object.keys(i).length===0){const w=t.data.value/r.data.value;return l(`${w}${C(o)}`)}let a=1;const d=()=>a=1;let p=t.data.value,N=r.data.value;for(;a<=p&&a<=N&&a<=1e5;)a++,u(p,a)&&u(N,a)&&(p/=a,N/=a,d());return{type:"fraction",data:{numerator:l(`${p}${C(o)}`),denominator:l(`${N}${C(i)}`)}}}const f={sum:{priority:0,symbol:"+",operation:(e,t)=>{const r=[...$(e),...$(t)],n={};r.forEach(i=>{if(J(i)){const a=C(i.data.multiplier);n[a]||(n[a]=0),n[a]+=i.data.value;return}const u=c(i);n[u]||(n[u]=0),n[u]++}),console.log("Summing up terms");const o=Object.keys(n).sort((i,u)=>i.length<u.length?1:i.length>u.length?-1:0).map(i=>{const u=n[i];let a;if(u===0)return null;e:if(/[\+\-\*\/|]/.test(i)){const d=H(i);if(console.log(`Key%c${i}%c contains operators.`,"color: skyblue"),u===1){a=d;break e}a={left:l(u.toString()),operator:l("*"),right:_(q({},d),{impossible:!0})}}else console.log(`Key %c${i}%c does not contain operators.`,"color: skyblue"),a=l(`${u}${i}`);return[a,l("+")]}).flat(100).filter(i=>i!==null);return o.pop(),v(o,{markAsImpossible:!0})}},difference:{priority:0,symbol:"-",operation:(e,t)=>f.sum.operation(e,Q(t))},product:{priority:1,symbol:"*",operation:(e,t)=>{const r=$(e),n=$(t),o=r.map(i=>n.map(u=>{let a;e:if(!s(i)&&!s(u)){if(J(i)&&J(u)){a={type:"number",data:{value:i.data.value*u.data.value,multiplier:oe(i.data.multiplier,u.data.multiplier)}};break e}const d=M(i)?S(i):b(S(i),l("1")),p=M(u)?S(u):b(S(u),l("1"));console.log("Multiplying fractions"),console.log(d),console.log(p),a=T(b(f.product.operation(d.data.numerator,p.data.numerator),f.product.operation(d.data.denominator,p.data.denominator))),console.log(a)}else a={left:i,right:u,operator:l("*"),impossible:!0};return[a,l("+")]})).flat(100);return o.pop(),f.sum.operation(v(o),l("0"))}},quotient:{priority:1,symbol:"/",operation:(e,t)=>b(S(e),S(t))},power:{priority:2,symbol:"^",operation:(e,t)=>{const r={a:!s(e),b:!s(t)};if(r.a&&r.b){const n=e,o=t;if(O(n)&&O(o)){const i=Math.pow(n.data.value,o.data.value);return{type:"number",data:{value:i,multiplier:{}}}}if(O(o)){const i=JSON.parse(JSON.stringify(n));return E(i.data.multiplier,B(n),o.data.value-1),i}}e:if(r.b&&O(t)){const o=t.data.value;if(o>50)break e;let i=[];for(let u=0;u<o;u++)i.push(S(e)),i.push(l("*"));return i.pop(),v(i)}return{left:e,operator:l("^"),right:t,impossible:!0}}},fraction:{priority:1,symbol:"|",operation:(e,t)=>b(e,t)}};function m(e,t){const r=e&&typeof e=="object"?h(e):e;if(!r||r.length!==1)return!1;const n=z(r);return n===null?!1:(t==null?void 0:t.priority)===void 0||t.priority===f[n].priority}function z(e){var r;return(r=Object.keys(f).find(n=>f[n].symbol===e))!=null?r:null}function le(e){const t=z(e);return t===null?null:f[t]}function se(e){var r;const t=(r=Object.keys(f).find(n=>f[n].symbol===e))!=null?r:null;return f[t].priority}function j(e){return`${f[e.data.name].symbol}`}function g(e,t={includeOpenings:!0,includeClosings:!0}){const r=e&&typeof e=="object"?h(e):e||"";return!r||r.length!==1?!1:t.includeOpenings!==!1&&r==="("||t.includeOpenings!==!1&&r==="["||t.includeClosings!==!1&&r===")"||t.includeClosings!==!1&&r==="]"}function ce(e){return e.data.type==="parenthesis"&&e.data.direction==="opening"?"(":e.data.type==="parenthesis"&&e.data.direction==="closing"?"]":e.data.type==="bracket"&&e.data.direction==="opening"?"[":e.data.type==="bracket"&&e.data.direction==="closing"?"]":""}function l(e){if(g(e))return{type:"parenthesis",data:{direction:g(e,{includeClosings:!1})?"opening":"closing",type:e==="("||e===")"?"parenthesis":"bracket"}};if(m(e))return{type:"operator",data:{name:z(e),priority:se(e)}};if(y(e))return{type:"number",data:{value:fe(e)||0,multiplier:de(e)||{}}};if(L(e))return ue(e);throw new Error(`The text '${e}' could not be recognized as a term.`)}function h(e){if(e.type==="number")return B(e);if(e.type==="operator")return j(e);if(e.type==="parenthesis")return ce(e);if(e.type==="fraction")return ae(e);throw new Error("Can't stringify term of an unknown type.")}function y(e){if(!e)return!1;const t=typeof e=="object"?h(e):e;return/^(-?[0-9]*(\.?[0-9]+)?([a-z](\^[0-9]+)?)*){1}$/g.test(t)}function U(e){if(!e)return!1;const t=typeof e=="object"?h(e):e;return/^-?[0-9]+\.?[0-9]*$/g.test(t)}function k(e){if(!e)return!1;const t=typeof e=="object"?h(e):e;return/^-?[a-z]$/g.test(t)}function fe(e){if(!y(e))return null;let t="";for(let r=0;r<e.length;r++){const n=e.charAt(r);if(k(n))break;t+=n}return t===""?1:t==="-"?-1:parseFloat(t)}function de(e){if(!y(e))return null;const t=te();let r="";for(let n=0;n<e.length;n++){const o=e.charAt(n);k(o)&&(e.charAt(n+1)==="^"?(E(t,o,parseFloat(e.charAt(n+2))),n+=2):E(t,o))}for(let n=0;n<r.length;n++){const o=r.charAt(n);E(t,o)}return t}function B(e){let t=e.data.value.toString();t==="1"&&(t=""),t==="-1"&&(t="-");const r=C(e.data.multiplier),n=`${t}${r}`;return n===""?"1":n}function I(e,t){for(let r=e.length-1;r>=0;r--){const n=e[r];if(!Array.isArray(n)&&!s(n)&&m(h(n),{priority:t==null?void 0:t.priority}))return r}return null}function pe(e){return e.replace(/\s+/g,"")}function ge(e){const t=[],r=u=>{u&&t.push(u)};let n="";const o=u=>{u&&(n+=u)},i=()=>{n!==""&&(t.push(n),n="")};for(let u=0;u<e.length;u++){const a=e.charAt(u);if(a!==" "){if(m(a)||g(a)){if(u===0&&(a==="+"||a==="-")){o(a);continue}i(),r(a);continue}else if(k(a)){if(u===1&&(n==="-"||n==="+")){o(a),i();continue}o(a);continue}o(a)}}return i(),t}function he(e){let t=e;return t=me(t),t=ye(t),t=be(t),t}function ye(e){var r;const t=[];for(let n=0;n<e.length;n++){const o=(r=e[n-1])!=null?r:null,i=e[n];(o&&!m(o)&&g(i,{includeClosings:!1})||U(o)&&k(i)||k(o)&&k(i))&&t.push("*"),t.push(i)}return t}function me(e){const t=[],r=()=>{var n;return(n=t[t.length-1])!=null?n:null};for(let n=0;n<e.length;n++){const o=e[n];g(r(),{includeClosings:!1})&&g(o,{includeOpenings:!1})?t.pop():t.push(o)}return t}function be(e){const t=Array.from(e);if(e.length<2)return t;e:if(m(t[0],{priority:0})){if(g(t[1])){t.unshift("0");break e}if(y(t[1])){t[1]=`${t[0]}${t[1]}`,t.splice(0,1);break e}}return t}function Oe(e){return v(G($e(e)))}function $e(e){return e.map(r=>l(r))}function G(e){const t=[];let r=[],n=0;for(let o=0;o<e.length;o++){const i=e[o];if(n!==0&&r.push(i),g(h(i),{includeClosings:!1}))n++,n===1&&r.push(i);else if(g(h(i),{includeOpenings:!1})&&(n--,n===0)){t.push(G(r.slice(1,-1))),r=[];continue}n===0&&t.push(i)}return t.map(o=>Array.isArray(o)&&o.length===1?o[0]:o)}function v(e,t){var d,p;if(e.length===1)return Array.isArray(e[0])?v(e[0]):e[0];let n=(()=>({2:I(e,{priority:2}),1:I(e,{priority:1}),0:I(e,{priority:0})}))();const o=(p=(d=n[0])!=null?d:n[1])!=null?p:n[2],i=e.slice(0,o),u=e[o],a=e.slice(o+1);if(!i||!a)throw new Error("Could not structure misconstructed expression.");return{left:v(i,t),operator:u,right:v(a,t),impossible:(t==null?void 0:t.markAsImpossible)||!1}}function we(e){return/^[0-9\.a-z\+\-\*\/\(\)\^\[\]|]+$/g.test(e)}function ke(e){let t=0;for(let r=0;r<e.length;r++){const n=e[r];if(g(n,{includeClosings:!1}))t++;else if(g(n,{includeOpenings:!1})&&(t--,t<0))return!1}return t===0}function ve(e){var n;const t=e[0],r=e[e.length-1];if(m(t)||m(r))return!1;for(let o=0;o<e.length;o++){const i=(n=e[o-1])!=null?n:null,u=e[o];if(m(u)&&(i?m(i):!0)||U(u)&&(i?k(i):!1))return!1}return!0}function H(e){const t=pe(e);if(!we(t))throw new Error(`The expression '${e}' could not be parsed because it contains unsupported characters.`);const r=ge(t),n=he(r);if(!ke(n))throw new Error(`The expression '${e}' could not be parsed because of a parentheses error.`);if(!ve(n))throw new Error(`The expression '${e}' could not be parsed because of an order error.`);return Oe(n)}function S(e){return JSON.parse(JSON.stringify(e))}function O(e){const t=o=>J(o)?r(o):n(o),r=o=>ne(o.data.multiplier),n=o=>O(o.data.numerator)&&O(o.data.denominator);return s(e)?(s(e.left)?O(e.left):t(e.left))&&(s(e.right)?O(e.right):t(e.right)):t(e)}function c(e){if(!s(e))return h(e);const t={left:s(e.left),right:s(e.right)},r={left:t.left?e.left.operator.data.priority:null,thisOperation:e.operator.data.priority,right:t.right?e.right.operator.data.priority:null},n={left:r.left===null?!1:r.left<r.thisOperation,right:r.right===null?!1:r.right<r.thisOperation};let o="";return o+=`${n.left?"(":""}${c(e.left)}${n.left?")":""}`,o+=` ${j(e.operator)} `,o+=`${n.right?"(":""}${c(e.right)}${n.right?")":""}`,o}function D(e){let t=JSON.parse(JSON.stringify(e));console.groupCollapsed("%cReduction step","color: limegreen; font-size: 1.2rem");let r="";for(;K(t);){const n=t,o=D(n.left);console.log(j(n.operator));const i=D(n.right);if(r=c(t),t=le(j(n.operator)).operation(o,i),r===c(t))break}return M(t)&&(console.log(`Simplifying fraction : %c${c(t)}`,"color: hotpink"),t=T(t)),console.log("Result : %c"+c(t),"color: skyblue"),console.groupEnd(),t}function $(e){return s(e)?e.operator.data.name==="sum"?[...$(e.left),...$(e.right)]:e.operator.data.name==="difference"?[...$(e.left),...$(Q(e.right))]:[e]:[e]}function Q(e){return f.product.operation(JSON.parse(JSON.stringify(e)),l("-1"))}function s(e){return e.hasOwnProperty("operator")}function J(e){return!s(e)&&!M(e)}function M(e){var r;return!!((r=e.data)==null?void 0:r.hasOwnProperty("numerator"))}function K(e){return s(e)?!!(e.impossible!==!0||K(e.left)||K(e.right)):!1}const P={def:{function:document.querySelector("#function-def"),a:document.querySelector("#a-def")},result:{p:document.querySelector(".result__paragraph")},compute:document.querySelector("#compute")};P.compute.addEventListener("click",()=>{const e=P.def.function.textContent||"";try{const t=H(e),r=D(t);console.groupCollapsed("%cParsed","color: orange; font-size: 1.2rem"),console.log(t),console.log(c(t)),console.groupEnd(),console.group("%cReduced","color: yellow; font-size: 1.2rem"),console.log(r),console.log(c(r)),console.groupEnd(),P.result.p.textContent=`${e} = ${c(r)}`}catch(t){P.result.p.textContent="An error occurred. Double-check the input literal expression.",console.log(t)}});
